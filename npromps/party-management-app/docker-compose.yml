version: '3.8'

services:
  # Base de datos MongoDB
  mongodb:
    image: mongo:6.0
    container_name: wedding-planner-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: wedding-planner
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - wedding-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: wedding-planner-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGO_URI: mongodb://admin:password123@mongodb:27017/wedding-planner?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-production-2024
      JWT_EXPIRE: 7d
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    networks:
      - wedding-network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: wedding-planner-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - wedding-network

volumes:
  mongodb_data:

networks:
  wedding-network:
    driver: bridge
